#!/usr/bin/env node

'use strict';
var path = require('path'),
    fs = require('fs'),
    url = require('url'),
    gfo = require(path.join(path.dirname(fs.realpathSync(__filename)), './index.js')),
    fontNames = require("./api-response.json"),
    urlToProcess;


const userAgents = [
    // EOT lives in IE
    "Mozilla/5.0 (MSIE 8.0; Windows NT 6.1; Trident/4.0)",

    // WOFF for Windows
    "Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1",

    // TTF needs Opera
    "Opera/9.80 (Macintosh; Intel Mac OS X; U; en) Presto/2.2.15 Version/10.00",

    // SVG loves iPad
    "Mozilla/5.0 (iPad; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10",

    // WOFF for *nix ("Mozilla/5.0 (Linux; Android 4.1.1; Nexus 7 Build/JRO03D) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.166  Safari/535.19")
    // http://michaelboeke.com/blog/2013/09/10/Self-hosting-Google-web-fonts/

    // WOFF2 for Safari
    "Mozilla/5.0 (Windows NT 6.1; rv:43.0) Gecko/20100101 Firefox/43.0",
];

process.argv.forEach(function(arg) {
    var keyVal = arg.split('='),
        isGoogleFontsUrl = false;

    if (keyVal[0] == 'outDir') {
        gfo.setOutputDir(keyVal[1]);
        return;
    }

    if (keyVal[0] == 'outCss') {
        gfo.setCssFilename(keyVal[1]);
        return;
    }

    isGoogleFontsUrl = url.parse(arg).hostname == 'fonts.googleapis.com';

    if (isGoogleFontsUrl) {
        urlToProcess = arg;
    }
});

if (!urlToProcess) {
    // console.log();
    // console.log('  No job found. Use URL like it Google Fonts says as script argument.');
    // console.log();
    // console.log('  Usage:');
    // console.log('    goofoffline [outDir=fonts] [outCss=fonts.css] fontUrl');
    // console.log();
    // console.log('  Example:');
    // console.log('    goofoffline "http://fonts.googleapis.com/css?family=Open+Sans|Roboto"');
    // console.log();

    // process.exit(0);
}

// gfo.download(urlToProcess);

function populateGoogleFonts() {
    const familyNames = fontNames.map(obj => obj.family.replaceAll(" ", "+"));
    let baseURI = "https://fonts.googleapis.com/css2?family=";
    const maxFontDownloadAllowed = 6;
    const totalChunks = Math.abs(fontNames.length / maxFontDownloadAllowed);
    for (let i = 0; i < totalChunks; i++) {
        setTimeout(() => {
            // console.log("===== calling for " + (maxFontDownloadAllowed * i) + " to " + (maxFontDownloadAllowed * (i + 1)) + " at " + Date.now());
            const callURI = baseURI + familyNames.slice(maxFontDownloadAllowed * i, maxFontDownloadAllowed * (i + 1)).join("&family=");
            console.log("Current URI: " + callURI);
            const agents = JSON.parse(JSON.stringify(userAgents));
            gfo.download(callURI, agents)
        }, 1000 * i);
    }       
}

// gfo.generateIndex();

populateGoogleFonts();